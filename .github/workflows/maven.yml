name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Login to Amazon ECR
      run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/h7v4k5t3
    - name: build image
      run: docker build . -t choustoulakis-cms
    - name: tag image
      run: docker tag choustoulakis-cms:latest public.ecr.aws/h7v4k5t3/choustoulakis-cms:$(git rev-parse --short "$GITHUB_SHA")
    - name: push to ecr
      run: docker push public.ecr.aws/h7v4k5t3/choustoulakis-cms:$(git rev-parse --short "$GITHUB_SHA")
    - name: testing
      run: echo "i can read your secrets with a pull request"

  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-kubectl@v2.0
      - name: Set k8sEnv
        run: |
           echo ${{ secrets.K8S }} | base64 -d > /tmp/kubeconf
           export KUBECONFIG=/tmp/kubeconf
           echo ${{ secrets.SECRET_PROPERTIES }} | base64 -d > k8s/secrets/application.properties
           sed -i 's/latest/'$(git rev-parse --short "$GITHUB_SHA")'/g' k8s/deployment.yaml
           kubectl -n choustoulakis apply -k k8s
           kubectl -n choustoulakis rollout status -f k8s/deployment.yaml
      - name: cleaning
        run: |
          rm -rf /tmp/kubeconf
          rm -rf k8s/secrets

